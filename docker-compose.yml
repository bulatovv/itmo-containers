services:
  init:
    image: 'curlimages/curl:8.11.1'
    command: |
      curl -X POST http://web:2019/load -H "Content-Type: text/caddyfile" -d '
      :80 { 
        @proxy {
          not method GET
          path /todos/*
        }

        reverse_proxy @proxy app:8080 {
          @created status 201
          handle_response @created {
            redir * /todos
          }
        }
        
        file_server {
          root /srv
          browse /srv/templates/todos.html
        }
        
        @todos {
          method GET
          path /todos/*
          not path /todos/
        }
        templates
        rewrite @todos /templates/todo.html
      }'
    depends_on:
      - web
    networks:
      - all

  web:
    image: 'caddy:2.8.4-alpine'
    command: ["caddy", "run"]
    env_file: '.env'
    environment:
      CADDY_ADMIN: ${CADDY_ADMIN}
    ports:
      - '80:80'
    volumes:
      - './static:/srv'
      - './templates:/srv/templates'
      - 'app_data:/srv/todos'
    networks:
      - all
  
  app:
    image: 'dumb-todo-app'
    build:
      context: .
      dockerfile: app.Dockerfile
    volumes:
      - 'app_data:/app/data'
    healthcheck:
      test: 'http --check-status --check-status 200 --timeout 10 http://localhost:8080/healthcheck'
      interval: 10s
      timeout: 10s
      start_period: 5s
      retries: 3
    networks:
      - all


volumes:
  app_data:

networks:
  all:
    driver: bridge
